이전 배열 변수를 담는배열

메소드 명만 봐도 무슨 기능을 하는지 알아야한다.(메소드의 기능은 명확해야한다)

배열2

배열의 크기가 정해져 있을 때 그 배열의 길이를 연장시키고 싶을 때 쓰이는 로직

배열의 크기가 0으로 지정되어 있을 때 
우리가 숫자를 담는 만큼 배열의 길이가 늘어나면서 값이 담기길 원하는 서비스

데이터는 항상 맨끝에 추가가된다.

새로운 배열을 만든다 배열의 크기가 하나 늘어난 배열을 만들고 
기존배열에 있는 데이터를 새로운 배열에 값을 순서대로 대입을하고
그리고 추가 하고자하는 데이터를 마지막 인덱스에 추가해준다.


객체를 담는 배열


하나의 프로세스는  프로그램

여러개의 쓰레드를 가질 수 있다.
: 멀티 쓰레딩

순차적으로 돌아간다.

우선순위는 있으나
순번을 없애버린다. 병렬 처리가 된다.

하나의 쓰레드를 가지고 있는게 
: 싱글 쓰레딩

쓰레드



클래스의 기능에 따른 구분

정보를 담는 클래스와

로직/ 기능을 담는 클래스가 나누어진다.


정보를 담는 클래스는 보통 entity class라고 하며

멤버변수로 정의를 한다.

로직/ 기능을 담는 클래스 같은경우는

각각의 로직은 각각의 지역을 가지고 있어야 하기에

전역변수로 선언하기 보다는 지역으로 선언을 하는데

각각의 로직에서 모두 공통적으로 쓰이는 변수는 전역으로 빼서 쓴다.

각각 의 클래스들은 기능에따라 나누어져야한다. 정보를 담는지 기능/로직을 담는지 구분해서 쓰기.




1. 프로젝트 생성
2. Github Repository 생성
3. Repository에 프로젝트 옮김
4. 최초 커밋(init)
5. push
=============== 기본 


















